{"version":3,"file":"static/js/200.eca00e78.chunk.js","mappings":"qOAAaA,EAAgB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,OAAnB,EAIrBC,EAAoB,SAAAH,GAAK,OAAIA,EAAMC,SAASG,KAAnB,E,6BCFzBC,EAAOC,EAAAA,GAAAA,GAAH,gDAGJC,EAAOD,EAAAA,GAAAA,GAAH,8kBA2BJE,EAASF,EAAAA,GAAAA,OAAH,yR,UCtBNG,EAAc,WACzB,IAAMC,GAAYC,EAAAA,EAAAA,IAAYZ,GAExBa,GAAWC,EAAAA,EAAAA,MACXZ,GAAWU,EAAAA,EAAAA,IAAYR,GAM7B,OAJAW,EAAAA,EAAAA,YAAU,WACRF,GAASG,EAAAA,EAAAA,MACV,GAAE,CAACH,KAGF,gCACGF,IAAa,4CAEd,SAACL,EAAD,UACGJ,EAASe,OAAS,GACjBf,EAASgB,KAAI,YAA2B,IAAxBC,EAAuB,EAAvBA,GAAIC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OACxB,OACE,UAACb,EAAD,WACGY,EADH,MACYC,GACV,SAACZ,EAAD,CAAQa,QAAS,kBAAMT,GAASU,EAAAA,EAAAA,IAAcJ,GAA7B,EAAjB,sBAFSA,EAOd,QAIV,E,6BCpCYK,EAAOjB,EAAAA,GAAAA,KAAH,mFAKJkB,EAAQlB,EAAAA,GAAAA,MAAH,wFAKLmB,EAAQnB,EAAAA,GAAAA,MAAH,2HAOLE,EAASF,EAAAA,GAAAA,OAAH,kbCfNoB,EAAc,WACzB,IAAMzB,GAAWU,EAAAA,EAAAA,IAAYR,GACvBS,GAAWC,EAAAA,EAAAA,MAEXc,EAAY,mCAAG,WAAMC,GAAN,2EACnBA,EAAIC,iBACEC,EAAOF,EAAIG,OACXZ,EAAOW,EAAKX,KAAKa,MACjBZ,EAASU,EAAKV,OAAOY,MAEvB/B,EAASgC,MAAK,SAAAC,GAAI,OAAIA,EAAKf,OAASA,CAAlB,IACpBgB,MAAM,GAAD,OAAIhB,EAAJ,6BAELP,GAASwB,EAAAA,EAAAA,IAAW,CAAEjB,KAAAA,EAAMC,OAAAA,KAC5Be,MAAM,GAAD,OAAIhB,EAAJ,qCACLW,EAAKO,SAXY,2CAAH,sDAelB,OACE,+BACE,UAACd,EAAD,CAAMe,SAAUX,EAAhB,WACE,UAACF,EAAD,mBAEE,SAACD,EAAD,CACEe,KAAK,OACLpB,KAAK,OACLqB,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,QAGZ,UAACjB,EAAD,qBAEE,SAACD,EAAD,CACEe,KAAK,MACLpB,KAAK,SACLqB,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,QAGZ,SAAC,EAAD,CAAQH,KAAK,SAAb,6BAIP,E,UCjDYf,EAAQlB,EAAAA,GAAAA,MAAH,wFAMLmB,EAAQnB,EAAAA,GAAAA,MAAH,2HCHLqC,EAAS,WACpB,IAAM/B,GAAWC,EAAAA,EAAAA,MAQjB,OACE,UAAC,EAAD,oCAEE,SAAC,EAAD,CAAO0B,KAAK,OAAOK,SATF,SAAAC,GACnBA,EAAEhB,iBACF,IAAMiB,EAAQD,EAAEd,OAAOC,MAAMe,cAC7BnC,GAASoC,EAAAA,EAAAA,GAAeF,GACzB,MAQF,EChBYG,EAAW,WACtB,OACE,iBAAKC,MAAO,CAAEC,QAAS,QAASC,OAAQ,aAAxC,WACE,SAAC1B,EAAD,KACA,SAACiB,EAAD,KACA,SAAClC,EAAD,MAGL,C","sources":["redux/contacts/selectors.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","pages/Contacts.jsx"],"sourcesContent":["export const selectLoading = state => state.contacts.loading;\n\nexport const selectFilter = state => state.contacts.filter;\n\nexport const selectAllContacts = state => state.contacts.items;","import styled from 'styled-components'\n\nexport const List = styled.ul`\n  margin-bottom: 10px;\n`;\nexport const Item = styled.li`\n  display: flex;\n  gap: 10px;\n  align-items: center;\n  margin-bottom: 8px;\n  padding: 3px 10px;\n  width: 290px;\n  height: 50px;\n  background: \trgb(248,248,248);\n  // background: linear-gradient(\n  //   90deg,\n  //   rgba(248,248,248, 1) 70%,\n  //   rgba(rgb(224,224,224), 1) 99%\n  // );\n  color: #000;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: box-shadow 200ms cubic-bezier(0.15, 0.52, 0.6, 0.69);\n  &:hover,\n  :focus {\n    box-shadow: 3px 3px 10px -1px rgba(219, 213, 213, 0.75);\n  }\n  &:last-child {\n    margin-bottom: 0;\n  }\n`;\n\nexport const Button = styled.button`\n  border-radius: 5px;\n  border: 0px;\n  height: 20px;\n  width: 50px;\n  transition: all 200ms cubic-bezier(0.15, 0.52, 0.6, 0.69);\n  &:hover,\n  :focus {\n    background-color: #C8C8C8;\n    box-shadow: 3px 3px 10px -1px rgba(219, 213, 213, 0.75);\n  }\n`;","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectLoading,\n  selectAllContacts,\n  // selectError,\n} from '../../redux/contacts/selectors';\nimport { deleteContact, fetchContacts } from '../../redux/contacts/operations';\nimport { List, Item, Button } from './ContactList.styled';\n\nexport const ContactList = () => {\n  const isLoading = useSelector(selectLoading);\n  // const error = useSelector(selectError);\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectAllContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      {isLoading && <p>Data is loading</p>}\n      {/* {error && <p>{error}</p>} */}\n      <List>\n        {contacts.length > 0 &&\n          contacts.map(({ id, name, number }) => {\n            return (\n              <Item key={id}>\n                {name} : {number}\n                <Button onClick={() => dispatch(deleteContact(id))}>\n                  Delete\n                </Button>\n              </Item>\n            );\n          })}\n      </List>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\n\nexport const Form = styled.form`\n  border: 1px solid;\n  padding: 15px;\n  margin: 0 auto;\n`;\nexport const Input = styled.input`\n  display: block;\n  margin-top: 15px;\n  margin-bottom: 15px;\n`;\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  font-weight: 500;\n  font-size: 20px;\n`;\nexport const Button = styled.button`\n  display: block;\n  width: 100px;\n  height: 25px;\n  margin-top: 15px;\n  background-color: #fff;\n  border: 0px;\n  border-radius: 5px;\n  transition: all 200ms cubic-bezier(0.15, 0.52, 0.6, 0.69);\n  background-color: #B2BEB5;\n  box-shadow: 0px 0px 1px 1px rgba(184, 164, 184, 1);\n  &:hover,\n  :focus {\n    background-color: #C8C8C8;\n    box-shadow: 3px 3px 10px -1px rgba(219, 213, 213, 0.75);\n  }\n`;","import { useDispatch, useSelector } from 'react-redux';\nimport { selectAllContacts } from '../../redux/contacts/selectors';\nimport { addContact } from '../../redux/contacts/operations';\nimport { Form, Input, Label, Button } from './ContactForm.styled';\n\nexport const ContactForm = () => {\n  const contacts = useSelector(selectAllContacts);\n  const dispatch = useDispatch();\n\n  const handleSubmit = async evt => {\n    evt.preventDefault();\n    const form = evt.target;\n    const name = form.name.value;\n    const number = form.number.value;\n\n    if (contacts.find(cont => cont.name === name)) {\n      alert(`${name} is already in contacts`)\n    } else {\n      dispatch(addContact({ name, number }));\n      alert(`${name} has been added to contacts list`)\n      form.reset();\n    }\n  };\n\n  return (\n    <>\n      <Form onSubmit={handleSubmit}>\n        <Label>\n          Name\n          <Input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </Label>\n        <Label>\n          Number\n          <Input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </Label>\n        <Button type=\"submit\">Add contact</Button>\n      </Form>\n    </>\n  );\n};\n","import styled from \"styled-components\"\n\nexport const Input = styled.input`\n  display: block;\n  margin-top: 15px;\n  margin-bottom: 20px;\n`\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  font-weight: 500;\n  font-size: 15px;\n`;","import { useDispatch } from 'react-redux';\nimport { filterContacts } from '../../redux/filterSlice';\n// import { selectFilter } from 'redux/contacts/selectors';\nimport { Input, Label } from './Filter.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    e.preventDefault();\n    const input = e.target.value.toLowerCase();\n    dispatch(filterContacts(input));\n  };\n\n  return (\n    <Label>\n      Find contacts by name\n      <Input type=\"text\" onChange={handleChange} />\n    </Label>\n  );\n};\n","import { ContactList } from '../components/ContactList/ContactList';\nimport { ContactForm } from '../components/ContactForm/ContactForm';\nimport { Filter } from '../components/Filter/Filter';\n\nexport const Contacts = () => {\n  return (\n    <div style={{ display: 'block', margin: '20px 80px' }}>\n      <ContactForm />\n      <Filter />\n      <ContactList />\n    </div>\n  );\n};"],"names":["selectLoading","state","contacts","loading","selectAllContacts","items","List","styled","Item","Button","ContactList","isLoading","useSelector","dispatch","useDispatch","useEffect","fetchContacts","length","map","id","name","number","onClick","deleteContact","Form","Input","Label","ContactForm","handleSubmit","evt","preventDefault","form","target","value","find","cont","alert","addContact","reset","onSubmit","type","pattern","title","required","Filter","onChange","e","input","toLowerCase","filterContacts","Contacts","style","display","margin"],"sourceRoot":""}